// Generated by ts-to-zod
import { z } from 'zod';
import {
  currencyCodeSchema,
  metadataSchema,
  providerFilterSchema,
  remitterSchema,
  mandateConstraintsSchema,
  mandatePaymentDestinationSchema
} from './mandate_common';

const mandateProviderSelectionUserSelectedSchema = z.object({
  type: z.literal('user_selected'),
  filter: providerFilterSchema.optional()
});

const paymentUserCreateSchema = z.object({
  id: z.string().optional(),
  name: z.string().optional(),
  email: z.string().optional(),
  phone: z.string().optional()
});

const mandateProviderSelectionPreselectedSchema = z.object({
  type: z.literal('preselected'),
  provider_id: z.string(),
  remitter: remitterSchema.optional()
});

const mandateProviderSelectionSchema = z.discriminatedUnion('type', [
  mandateProviderSelectionUserSelectedSchema,
  mandateProviderSelectionPreselectedSchema
]);

const mandateCommercialSchema = z.object({
  type: z.literal('commercial'),
  provider_selection: mandateProviderSelectionSchema,
  beneficiary: mandatePaymentDestinationSchema
});

const mandateSweepingSchema = z.object({
  type: z.literal('sweeping'),
  provider_selection: mandateProviderSelectionSchema,
  beneficiary: mandatePaymentDestinationSchema
});

const mandateSchema = z.discriminatedUnion('type', [mandateSweepingSchema, mandateCommercialSchema]);

export const createMandateRequestSchema = z.object({
  mandate: mandateSchema,
  currency: currencyCodeSchema,
  user: paymentUserCreateSchema,
  constraints: mandateConstraintsSchema,
  metadata: metadataSchema.optional()
});

export const createMandateResponseSchema = z.object({
  id: z.string(),
  user: z.object({ id: z.string() }),
  resource_token: z.string()
});

export type CreateMandateRequest = z.infer<typeof createMandateRequestSchema>;

export type CreateMandateResponse = z.infer<typeof createMandateResponseSchema>;
